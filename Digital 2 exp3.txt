PB part:
entity Debouncer is 
port(clk:in std_logic;
PB:in std_logic;
reset:in std_logic;
debounced:out std_logic
);
end Debouncer;
architecture behavioral of Debouncer is
signal counter:integer range  0 to 500000:=0;
signal oldPB:std_logic:='0';
signal counting:std_logic:='0';
begin
process(clk,PB)
begin
if(clk' event and clk='1') then
if(counting='1') then counter<=counter+1;
if(counter =500000) then 
debounced<=(oldPB);
counting<='0';
counter<=0;
end if;
elsif(oldPB=not(PB))then counting<='1';
end if;
oldPB<=PB;
end if;
end process;
end behavioral;

Then we created a new source file of VHDL Module type and we called it “Counter” , and wewrote our code .


entiry PBCounter is
port(CLK:in std_logic;
PushButton:in std_logic;
Reset:in std_logic;
UpDown:in std_logic;
Count:out std_logic_vector(3 downto 0)
);
end PBCounter;
architecture behaviral of PBCounter is 
component Debouncer
port(clk:in std_logic;
PB:in std_logic;
reset:in std_logic;
debounced:out std_logic
);
end component;
signal counter:std_logic_vector(3 downto 0):="0000";
signal active_debounced:std_logic;
begin
Module:Debouncer
port map(clk=>CLK,
PB=>PushButton,
reset=>Reset,
debounced=>active_debounced
);
process(Reset,active_debounced)
begin
if(Reset='1') then counter<="0000";
elsif(active_debounced' event and active_debounced='1') then
if(UpDown='1') then counter<=counter+'1';
elsif(UpDown='0') then counter<=counter-'1';
end if;
end if;
Count<=counter;
end process;
end behavioral;

Then we will synthesis our design and  program it onto the Spartan3E Starter Board as the following :
NET "CLK" LOC = "C9";
NET "PushButton" LOC = "D18";
NET "Reset" LOC = "N17";
NET "UpDown" LOC = "H18";
NET "Count(3)" LOC = "F9";
NET "Count(2)" LOC = "E9";
NET "Count(1)" LOC = "D11";
NET "Count(0)" LOC = "C11"; 

Then we run Synthesize – XST process to synthesize our design on FPGA .
